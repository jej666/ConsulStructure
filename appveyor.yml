install:
  - set PATH=C:\Ruby23\bin;%PATH%
  - ps: mkdir c:\ca; iwr http://curl.haxx.se/ca/cacert.pem -outfile C:\ca\cacert.pem
  - set SSL_CERT_FILE=C:\ca\cacert.pem
  - ps: |
        $version = [version]$(cat VERSION)
        $build = $env:APPVEYOR_BUILD_NUMBER
        $major = $version.Major
        
        $branch = $env:APPVEYOR_REPO_BRANCH
        if ($branch -eq 'master') {
          $version = "$version-ci-$build"
        } elseif ($env:APPVEYOR_REPO_TAG) {
          $version = $env:APPVEYOR_REPO_TAG_NAME
        }
        else {
          $version = "$version-br-$branch-$build"
        }
        Set-AppveyorBuildVariable -Name "AssemblyMajor" -Value "$major"
        Update-AppVeyorBuild -Version "$version"

  - gem install chandler --no-ri --no-rdoc
  - ps: set-content ~/.netrc "machine api.github.com login $env:github_username password $env:github_password" -encoding ascii
  - ps: cp ~/.netrc ~/_netrc
  - chandler push

assembly_info:
  patch: false
  file: src\CommonInfo.cs
  assembly_version: $(AssemblyMajor).0.0.0
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'

configuration: Debug

platform: Any CPU


before_build:
  - pushd && cd src && nuget restore && popd

nuget:
  project_feed: true
  disable_publish_on_pr: true

build:
  parallel: true
  verbosity: minimal
  publish_nuget: true
  publish_nuget_symbols: true
  include_nuget_references: true
  project: src/ConsulStructure.sln

after_build:
  - pushd
  - cd %APPVEYOR_BUILD_FOLDER%
  - nuget pack ConsulStructure.nuspec -version %APPVEYOR_BUILD_VERSION% -basepath %APPVEYOR_BUILD_FOLDER%/src/ConsulStructure/

environment:
  SSL_CERT_FILE: C:\ca\cacert.pem
  COVERALLS_REPO_TOKEN:
    secure: sR+OO2wYopy1MdZX+asECm56PinUUuIHNQXcAfSmVlf6lw6y4I5jOiby5IqsuwyP
  github_username: serialseb
  github_password:
    secure:
      1lXaOJ0GvCAOd0O9DDvVqw2eb7TvP2jve12u3hD2g4J7RVW2c2jC5XuRFyEuduUA

artifacts:
 - path: src\openrasta\bin\$(configuration)\*.dll
   name: dlls
 - path: src\openrasta\bin\$(configuration)\*.pdb
   name: pdbs
 - path: '*.nupkg'
 - path: opencoverCoverage.xml

test_script:
- ps: |
    $xunit = (Resolve-Path "src/packages/xunit.runner.console.*/tools/xunit.console.exe").ToString()
    $opencover = (Resolve-Path "src/packages/OpenCover.*/tools/OpenCover.Console.exe").ToString()
    $coveralls = (Resolve-Path "src/packages/coveralls.net.*/tools/csmacnz.Coveralls.exe").ToString()
    & $opencover -register:user -target:$xunit "-targetargs:""src\ConsulStructure\bin\$env:CONFIGURATION\ConsulStructure.dll"" -noshadow -appveyor" -filter:"+[*]*" -output:opencoverCoverage.xml  -searchdirs:"src\ConsulStructure\bin\$env:CONFIGURATION\"
    & $coveralls --opencover -i opencoverCoverage.xml --repoToken $env:COVERALLS_REPO_TOKEN --commitId $env:APPVEYOR_REPO_COMMIT --commitBranch $env:APPVEYOR_REPO_BRANCH --commitAuthor $env:APPVEYOR_REPO_COMMIT_AUTHOR --commitEmail $env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL --commitMessage $env:APPVEYOR_REPO_COMMIT_MESSAGE --jobId $env:APPVEYOR_JOB_ID
